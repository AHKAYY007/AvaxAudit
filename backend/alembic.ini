# A generic, single database configuration.

[alembic]
# Path to migration scripts (use forward slashes for cross-platform compatibility)
script_location = alembic

# Uncomment to use timestamped filenames
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Prepend a custom path to sys.path
prepend_sys_path = .

# Use os.pathsep for version path separator (default)
version_path_separator = os

# SQLAlchemy DB URL for PostgreSQL using asyncpg driver
sqlalchemy.url = postgresql+asyncpg://avaxdb_user:c6VwIOfR4yxsRUXoWg7UAEuR1mkAJ3JO@dpg-d0or2lbe5dus73d5tgo0-a.oregon-postgres.render.com/avaxdb

# Optional: timezone setting requires Python >= 3.9 or zoneinfo backport
# timezone = UTC

# Optional: max slug length
# truncate_slug_length = 40

# Optional: run environment during `revision` command
# revision_environment = false

# Optional: allow sourceless detection
# sourceless = false

# Optional: enable recursive search for revisions
# recursive_version_locations = false

# Optional: set output encoding
# output_encoding = utf-8

[post_write_hooks]
# Example post-write hooks for formatting/linting new migration files

# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = check --fix REVISION_SCRIPT_FILENAME

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
